name: Build & tests

on:
  push:
    branches:
      - "**"
      - "!main"

jobs:

  build-cross:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: nixbuild/nix-quick-install-action@v27

      - uses: nix-community/cache-nix-action@v5
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-

      - uses: cachix/cachix-action@v12
        with:
          name: brog
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      
      - run: nix develop .#cross -c task build-cross-linux

      # Can't include darwin targets as not possible to use it on CI directly for now
      # since it requires custom Docker images which can't be published as per Apple licenses
      # - run: nix develop .#cross -c task build-cross-macos

  # Build and push to cachix
  build-flake:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: nixbuild/nix-quick-install-action@v27

      - uses: nix-community/cache-nix-action@v5
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-

      - uses: cachix/cachix-action@v12
        with:
          name: brog
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      
      - run: nix build --json | jq -r '.[].outputs | to_entries[].value' | cachix push brog
  
  
  test-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: nixbuild/nix-quick-install-action@v27

      - name: Restore and cache Nix store
        uses: nix-community/cache-nix-action@v5
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-

      - uses: cachix/cachix-action@v12
        with:
          name: borg
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - uses: actions/cache@v3
        name: setup Cargo cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/            
          key: ${{ runner.os }}-${{ runner.arch }}-cargo

      - run: nix develop -c task test-clippy
      - run: nix develop -c task test-doc
      - run: nix develop -c task test-cli
      - run: nix develop -c task test-install
      